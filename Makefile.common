##
## legOS simulator
## Makefile.common - common make rules
## (c) 1998 by Markus L. Noga <noga@inrialpes.fr>    
##     1999 Thomas Roeblitz <roeblitz@informatik.hu-berlin.de>
##

# legOS simulator root directory, enter your location here
#SIM_ROOT=$(HOME)/legosim/
SIM_ROOT=$(HOME)/tex/ncsu/classes/rt/hw/hw1/legosim/

#for LinuxThreads
TLIBS_DIR=
TLIBS=-lpthread
CINC=-I$(SIM_ROOT)include

#FSU THREAD root directory, if no other threads available
THREAD_ROOT=$(HOME)/threads/

#for FSU PThreads, uncomment this
#TLIBS_DIR=-L$(THREAD_ROOT)lib
#TLIBS=-lgthreads -lmalloc -ldl
#CINC=-I$(THREAD_ROOT)include -I$(SIM_ROOT)include

# I like -Wall as much as the next guy. However, due to the lack
# of specific register constraints for the H8, there is no other 
# way than __asm__("rX") to assign register X to a variable, which
# is necessary for low overhead ROM calls.
#
# Therefore, we have to live with the unused variable and possibly
# uninitialized variable warnings this practice generates. 
#
# I prefer ignoring the warnings.
#
COPT  =-O2 -fno-builtin -fomit-frame-pointer
CWARN =-Wall -Wno-unused -Wno-uninitialized

CFLAGS=$(COPT) $(CWARN) $(CINC)

CXXFLAGS=-DCXX $(CFLAGS) 

##
## no user servicable parts below
##

AS=as
AR=ar
LD=gcc
NM=nm
OBJCOPY=objcopy
OBJDUMP=objdump
CC=gcc
CXX=g++
 

###
### generic rules
###

# how to assemble
%.o: %.S
	$(AS) $*.S -o $*.o

# how to compile C source
%.o: %.c
	$(CC) $(CFLAGS) -g -c $(SIM_ROOT)$(HERE)/$*.c -o $*.o

# how to compile C++ source
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $*.cpp -o $*.o

